using SharpNeat.Utils;

namespace SharpNeat.Neat
{
    // TODO: Consider packing the struct (i.e. remove padding) to reduce memory footprint and thus improve CPU cache hit rate.

    /// <summary>
    /// Conveys innovation IDs related to an added node.
    /// 
    /// When a node is added to a neural network in NEAT, an existing connection between two nodes is deleted and replaced
    /// with the new node and two new connections; one connection between the source node and the new node, and another from
    /// the new node to the target node. This struct stores the IDs of the new node the two new connections 
    /// 
    /// This class exists to represent newly added structure in a history buffer of added structures. This allows re-use
    /// of IDs where a mutation recreates a structure that has previously occurred through previous mutations on other 
    /// genomes.
    /// </summary>
    public struct AddedNodeInfo
    {
        #region Auto Properties
        
        /// <summary>
        /// The added node's ID.
        /// </summary>
        public int AddedNodeId { get; }

        /// <summary>
        /// The added 'input' connection's ID.
        /// </summary>
        public int AddedInputConnectionId { get; }

        /// <summary>
        /// Gets the added 'output' connection's ID.
        /// </summary>
        public int AddedOutputConnectionId { get; }
        
        #endregion

        #region Constructor

        /// <summary>
        /// Construct with the provided IDs.
        /// </summary>
        public AddedNodeInfo(int nodeId, int inputConnectionId, int outputConnectionId)
        {
            this.AddedNodeId = nodeId;
            this.AddedInputConnectionId = inputConnectionId;
            this.AddedOutputConnectionId = outputConnectionId;
        }

        /// <summary>
        /// Construct by assigning new IDs generated by the provided Int32Sequence.
        /// </summary>
        public AddedNodeInfo(Int32Sequence idSeq)
        {
            this.AddedNodeId = idSeq.Next();
            this.AddedInputConnectionId = idSeq.Next();
            this.AddedOutputConnectionId = idSeq.Next();
        }

        #endregion
    }
}
